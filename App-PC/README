Ligar robot:
    1- Ligar robot
    2- Fazer calibração inicial.
    3- Verificar ip e subnet mask
    4- Meter em Remote
    5- Ligar servos

Modulo Serie:
    1- Ligar cabo usb ao pc e ao robot
    2- Ir ao gestor de dispositivos e ver a porta COM que o robot está a usar
    3- Inserir porta COM no programa

Modulo Wifi:
    1- Smartphone cria hotspot wifi com nome "test" e senha "123456789"
    2- Escolher ip fixo para o modulo wifi (mesmo q está no esp) e colocá-lo nas definições wifi do pc ()
    3- Porta 11111

Modulo Ethernet:
    1- Ligar cabo ethernet ao pc e ao robot
    2- Mudar o ip do pc nas definições (ip manual) para um no mesmo ip do robot com ultimo nr diferente e mesma netmask
     Ex:"192.168.2.1". (Ver netmask)
    3- Ir ao Cmd dar ping ao ip do robot (para verificar se conectado)
    4- Inserir ip do robot no programa

Modulo GravaçãoJBI:
    ... tutorial de como enviar o ficheiro para o robot (notepad++)

Modulo GravaçãoTXT:

Modulo Play:

To-do:

[] Implementar
    ![] - Corrigir o pretende continuar? depois do "q" que aparece 2 vezes.
    ![] - Corrigir o reset da posição que corre x=vorigin antes do getTcppose que vem antes
    [] - Ifs
        [] - Para escolher programa gravado (se escolhermos fazer mais do que 1)
    [] - Modulo Gravação
        [] - Implementar vários ficheiros se quisermos (input nome ou caminho que vai entrar na função)
    [] - Redifinir seguranças?

[] Testar
    [] - modulo Wifi
    [] - modulo Gravação
        [] - Verificar ficheiro
    [] - modulo Play
        [] - Verificar tempos (time.sleep)
        [] - Verificar play pause
    [] - Ifs
        [X] - para ir para posição inicial
        [] - para para e iniciar play
        [X] - para parar o programa
        [X] - limpar erro
    [X] - Input initialpos não aparece quando já na initialpos
    [] - Threads start and stop
    [X] - Termino e reset das threads e do programa
    [] - Se velocidade do robot influencia delay
    [X] - Verificar o shutdown
    [] - Incrementos de rotação
    [X] - Testar seguranças inputs
    [] Comunicação já com dados do sensor teste robô (No import do json dar imput trocado se necessário)

[] Verificar e Melhorar
    [] Verificar a necessidade do reset no modulo play (move by joint qd i=0 (no inicio)) (Vai ser precisa de certeza)
        if q ==1 ->... Esse thread era chamado no while principal
    [] Verificar o mveml se é tabela de posições e chega
    [] Passar para os módulos o mais que conseguir para simplificar o main. (Talvez o calculate position)
    [] - Comentar, "limpar" e documentar (este doc) código
    [] - Calibrar aceleração e desaceleração no programaPrincipal mover para posição inicial
    [] Verificar os events (threads) para o inserir teclas que às vezes não funciona (Events em threds que atualizam g,
         h, q, p, ...)
         Opções:
        investigar usos exemplo já feitos (!!!tirar ideia do listener e aplicar com variáveis já usadas!!! acho que á a mais
         fácil de implementar) (só não é a mais rápida mas não por muito. Caso seja preciso mais rápido, meter cada parte a
         correr em outro thread (ver exemplo))
        meter os keyboars press todos numa função em outro thread e execuatva tudo. Esse thread era chamado no while principal
        meter os keyboars press todos numa função em outro thread e atualizava por ex: if q -> q=1 e no while principal

Comentários
- Para não haver delay: Tim send = 20x t sampling do robot 40 para 2 (Teoria: tempo de execução do programa)
- Delay não depende da velocidade do robô!
